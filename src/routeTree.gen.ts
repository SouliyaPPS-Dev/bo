/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AppUsersRouteImport } from './routes/_app/users'
import { Route as AppSupportRouteImport } from './routes/_app/support'
import { Route as AppSettingsRouteImport } from './routes/_app/settings'
import { Route as AppProductsRouteImport } from './routes/_app/products'
import { Route as AppOrdersRouteImport } from './routes/_app/orders'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as AppAnalyticsRouteImport } from './routes/_app/analytics'
import { Route as AppAnalyticsReportsRouteImport } from './routes/_app/analytics/reports'
import { Route as AppAnalyticsRealtimeRouteImport } from './routes/_app/analytics/realtime'
import { Route as AppAnalyticsOverviewRouteImport } from './routes/_app/analytics/overview'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AppUsersRoute = AppUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AppRoute,
} as any)
const AppSupportRoute = AppSupportRouteImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any)
const AppProductsRoute = AppProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AppRoute,
} as any)
const AppOrdersRoute = AppOrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)
const AppAnalyticsRoute = AppAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => AppRoute,
} as any)
const AppAnalyticsReportsRoute = AppAnalyticsReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AppAnalyticsRoute,
} as any)
const AppAnalyticsRealtimeRoute = AppAnalyticsRealtimeRouteImport.update({
  id: '/realtime',
  path: '/realtime',
  getParentRoute: () => AppAnalyticsRoute,
} as any)
const AppAnalyticsOverviewRoute = AppAnalyticsOverviewRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => AppAnalyticsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AppAnalyticsRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/orders': typeof AppOrdersRoute
  '/products': typeof AppProductsRoute
  '/settings': typeof AppSettingsRoute
  '/support': typeof AppSupportRoute
  '/users': typeof AppUsersRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/analytics/overview': typeof AppAnalyticsOverviewRoute
  '/analytics/realtime': typeof AppAnalyticsRealtimeRoute
  '/analytics/reports': typeof AppAnalyticsReportsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AppAnalyticsRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/orders': typeof AppOrdersRoute
  '/products': typeof AppProductsRoute
  '/settings': typeof AppSettingsRoute
  '/support': typeof AppSupportRoute
  '/users': typeof AppUsersRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/analytics/overview': typeof AppAnalyticsOverviewRoute
  '/analytics/realtime': typeof AppAnalyticsRealtimeRoute
  '/analytics/reports': typeof AppAnalyticsReportsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/analytics': typeof AppAnalyticsRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/orders': typeof AppOrdersRoute
  '/_app/products': typeof AppProductsRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/support': typeof AppSupportRoute
  '/_app/users': typeof AppUsersRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_app/analytics/overview': typeof AppAnalyticsOverviewRoute
  '/_app/analytics/realtime': typeof AppAnalyticsRealtimeRoute
  '/_app/analytics/reports': typeof AppAnalyticsReportsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/dashboard'
    | '/orders'
    | '/products'
    | '/settings'
    | '/support'
    | '/users'
    | '/signin'
    | '/signup'
    | '/analytics/overview'
    | '/analytics/realtime'
    | '/analytics/reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/dashboard'
    | '/orders'
    | '/products'
    | '/settings'
    | '/support'
    | '/users'
    | '/signin'
    | '/signup'
    | '/analytics/overview'
    | '/analytics/realtime'
    | '/analytics/reports'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/analytics'
    | '/_app/dashboard'
    | '/_app/orders'
    | '/_app/products'
    | '/_app/settings'
    | '/_app/support'
    | '/_app/users'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_app/analytics/overview'
    | '/_app/analytics/realtime'
    | '/_app/analytics/reports'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/users': {
      id: '/_app/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AppUsersRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/support': {
      id: '/_app/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof AppSupportRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/products': {
      id: '/_app/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AppProductsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/orders': {
      id: '/_app/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AppOrdersRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/analytics': {
      id: '/_app/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AppAnalyticsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/analytics/reports': {
      id: '/_app/analytics/reports'
      path: '/reports'
      fullPath: '/analytics/reports'
      preLoaderRoute: typeof AppAnalyticsReportsRouteImport
      parentRoute: typeof AppAnalyticsRoute
    }
    '/_app/analytics/realtime': {
      id: '/_app/analytics/realtime'
      path: '/realtime'
      fullPath: '/analytics/realtime'
      preLoaderRoute: typeof AppAnalyticsRealtimeRouteImport
      parentRoute: typeof AppAnalyticsRoute
    }
    '/_app/analytics/overview': {
      id: '/_app/analytics/overview'
      path: '/overview'
      fullPath: '/analytics/overview'
      preLoaderRoute: typeof AppAnalyticsOverviewRouteImport
      parentRoute: typeof AppAnalyticsRoute
    }
  }
}

interface AppAnalyticsRouteChildren {
  AppAnalyticsOverviewRoute: typeof AppAnalyticsOverviewRoute
  AppAnalyticsRealtimeRoute: typeof AppAnalyticsRealtimeRoute
  AppAnalyticsReportsRoute: typeof AppAnalyticsReportsRoute
}

const AppAnalyticsRouteChildren: AppAnalyticsRouteChildren = {
  AppAnalyticsOverviewRoute: AppAnalyticsOverviewRoute,
  AppAnalyticsRealtimeRoute: AppAnalyticsRealtimeRoute,
  AppAnalyticsReportsRoute: AppAnalyticsReportsRoute,
}

const AppAnalyticsRouteWithChildren = AppAnalyticsRoute._addFileChildren(
  AppAnalyticsRouteChildren,
)

interface AppRouteChildren {
  AppAnalyticsRoute: typeof AppAnalyticsRouteWithChildren
  AppDashboardRoute: typeof AppDashboardRoute
  AppOrdersRoute: typeof AppOrdersRoute
  AppProductsRoute: typeof AppProductsRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppSupportRoute: typeof AppSupportRoute
  AppUsersRoute: typeof AppUsersRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppAnalyticsRoute: AppAnalyticsRouteWithChildren,
  AppDashboardRoute: AppDashboardRoute,
  AppOrdersRoute: AppOrdersRoute,
  AppProductsRoute: AppProductsRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppSupportRoute: AppSupportRoute,
  AppUsersRoute: AppUsersRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
